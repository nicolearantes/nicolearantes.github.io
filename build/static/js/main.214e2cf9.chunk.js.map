{"version":3,"sources":["components/Fish.jsx","components/Food.jsx","components/Counter.jsx","components/WinOrLose.jsx","components/Race.jsx","fishes.js","components/Header.jsx","components/Instructions.jsx","components/MyBets.jsx","components/App.jsx","index.js"],"names":["Fish","props","useState","selected","setSelected","counting","setCounting","borderColor","plusClass","onClick","onSub","fish","className","style","name","alt","src","img","visibility","onAdd","Food","color","foodAmount","Counter","count","setCount","counterVisibility","setCounterVisibility","onFinish","useEffect","setTimeout","opacity","backgroundColor","class","WinOrLose","text","winner","gameResult","foodBalance","useHistory","console","log","setGameState","to","Race","distance","setDistance","setGameResult","gameFinished","winOrLoose","prize","minVel","Math","min","fishes","map","velocity","winners","filter","totalBets","reduce","total","each","length","won","onRaceEnd","forEach","vel","floor","random","transitionDuration","left","key","Header","Instructions","handleClick","MyBets","rounds","bets","bet","i","roundNumber","balance","reverse","showFish","round","podium","sort","a","b","App","totalFoodCookie","Cookies","get","betsCookie","JSON","parse","totalFood","setTotalFood","gameState","savedFishes","setSavedFishes","setBets","handleAdd","amount","handleSub","newFish","handleRace","handleRestart","window","confirm","remove","location","reload","handleRaceEnd","newTotal","set","push","stringify","history","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.214e2cf9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Fish(props) {\r\n    const [selected, setSelected] = useState(false);\r\n    const [counting, setCounting] = useState(0);\r\n    const borderColor = selected ? \"#39FF14\" : \"white\";\r\n    const plusClass = selected ? \"visible\" : \"hidden\";\r\n\r\n    function handleOnClick() {\r\n        setSelected(!selected)\r\n        if (selected) {\r\n            setCounting(0)\r\n            props.onSub(counting)\r\n            props.fish.counting = 0\r\n        }\r\n    }\r\n\r\n    function handleAdd() {\r\n        const hasFood = props.onAdd(100)\r\n\r\n        if (hasFood) {\r\n            props.fish.counting = counting + 100\r\n            setCounting(counting + 100)\r\n        } \r\n    }\r\n\r\n    function handleSub() {\r\n        if (counting > 0) {\r\n            props.fish.counting = counting - 100\r\n            setCounting(counting - 100)\r\n            props.onSub(100)\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            <div onClick={handleOnClick}\r\n                className={\"fish-card\" + (selected ? \" selected\" : \"\")}\r\n                style={{ borderColor: borderColor }}>\r\n                <h1>{props.name}</h1>\r\n                <img className=\"fish-img\" alt=\"Draw of a fish, colored with golden color\" src={props.img}></img>\r\n\r\n            </div>\r\n\r\n            <div className=\"plus-class\" style={{ visibility: plusClass }}>\r\n                <button className=\"calc calc-icon\" onClick={handleSub}> - </button>\r\n                <p className=\"calc\">{counting}</p>\r\n                <button className=\"calc calc-icon\" onClick={handleAdd}> + </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Fish;","import React from \"react\";\r\n\r\nfunction Food(props) {\r\n    return <div>\r\n        <p style={{color: props.foodAmount === 0? \"red\": \"\"}}>You currently have {props.foodAmount} cat's food</p>\r\n    </div>\r\n}\r\n\r\nexport default Food;","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Counter(props) {\r\n    const [count, setCount] = useState(5)\r\n    const [counterVisibility, setCounterVisibility] = useState(true)\r\n    \r\n    useEffect(() => {\r\n        setTimeout(counting, 1000)\r\n    }, [count])\r\n\r\n    function counting() {\r\n        if (count > 0) {\r\n            setCount(count - 1)\r\n\r\n            if (count == 1) {\r\n                props.onFinish()\r\n            }\r\n        } else {\r\n            setCounterVisibility(false)\r\n\r\n        }\r\n    }\r\n\r\n\r\n    if (count > 0) {\r\n        return <div className=\"counter\" >\r\n            <p> Are you ready? </p>\r\n            <p>{count}</p>\r\n        </div>\r\n    } else {\r\n        return <div className=\"counter\"\r\n            style={{\r\n                visibility: counterVisibility ? \"visible\" : \"hidden\",\r\n                opacity: counterVisibility ? 1 : 0,\r\n                backgroundColor: \"green\"\r\n            }}>\r\n            <p className=\"p-go\"> Go!</p>\r\n            <i class=\"fas fa-flag-checkered\"></i>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Counter;","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction WinOrLose(props) {\r\n    const winner = props.gameResult.winner\r\n    const foodBalance = props.gameResult.foodBalance\r\n    const history = useHistory()\r\n\r\n    console.log(props.gameResult)\r\n\r\n    function whoWon() {\r\n        if (winner) {\r\n            return <div>\r\n                <h1>The winner</h1>\r\n                <img \r\n                alt=\"draw fish\" \r\n                src={winner.img}\r\n                className=\" fish-img\"></img>\r\n                <h1>{winner.name}</h1>\r\n            </div>\r\n        } else {\r\n            return <div>\r\n                <h1> No winners </h1>\r\n            </div>\r\n        }\r\n    }\r\n\r\n    let text\r\n\r\n    if (foodBalance > 0) {\r\n        text = `You won ${foodBalance} food!`\r\n\r\n    } else if (foodBalance < 0) {\r\n        text = `You lost ${-foodBalance} food!`\r\n\r\n    } else {\r\n        text = \"You didn't lose or win any food\"\r\n    }\r\n\r\n    console.log(text)\r\n\r\n    return <div className=\"win-or-lose\">\r\n        {whoWon()}\r\n        <p> {text} </p>\r\n        <button className=\"play\" onClick={() => props.setGameState(\"choose\")}>Play again</button>\r\n        <Link to=\"my-bets\"><button onClick={() => props.setGameState(\"choose\")} className=\"play\">My Bets</button></Link>\r\n    </div>\r\n}\r\n\r\nexport default WinOrLose;","import React, { useEffect, useState } from \"react\";\r\nimport Counter from \"./Counter\";\r\nimport WinOrLoose from './WinOrLose';\r\nimport GameResult from \"../GameResult\";\r\n\r\nfunction Race(props) {\r\n    const [distance, setDistance] = useState(0);\r\n    const [gameResult, setGameResult] = useState(null);\r\n    const gameFinished = gameResult != null\r\n    useEffect(()=> {\r\n        props.fishes.forEach(fish => {\r\n            const vel = (Math.floor(Math.random() * 20) + 70) * 100;\r\n            fish.velocity = vel;\r\n        })\r\n    }, [])\r\n\r\n    function newFish(fish) {\r\n        return <img\r\n            alt=\"fish draw\"\r\n            className=\"race-fish fish-img\"\r\n            style={{ transitionDuration: fish.velocity + \"ms\", left: distance + \"%\" }} src={fish.img}></img>\r\n    }\r\n\r\n    function handleFinish() {\r\n        setDistance(79.8)\r\n        setTimeout(winOrLoose, 9000);\r\n    }\r\n\r\n    function winOrLoose() {\r\n        const minVel = Math.min(...props.fishes.map(fish => fish.velocity));\r\n        const winners = props.fishes.filter(fish => fish.velocity === minVel);\r\n        const allCountings = props.fishes.map(fish => fish.counting);\r\n        const totalBets = allCountings.reduce((total, each) => total + each)\r\n\r\n        let prize\r\n        let winner\r\n\r\n        if (winners.length !== 1) {\r\n            prize = totalBets\r\n            winner = null\r\n        } else {\r\n            winner = winners[0]\r\n            winner.won = true\r\n            prize = winner.counting * 3\r\n        }\r\n\r\n        setGameResult({\r\n            foodBalance: prize - totalBets,\r\n            winner: winner\r\n        })\r\n        props.onRaceEnd(prize, totalBets)\r\n    }\r\n\r\n    function winOrLose() {\r\n        return  <WinOrLoose\r\n            gameResult={gameResult}\r\n            fishes={props.fishes}\r\n            setGameState={props.setGameState}\r\n        />\r\n    }\r\n\r\n    return <div>\r\n        <Counter onFinish={handleFinish} />\r\n        <div className=\"race\">\r\n            {props.fishes.map(newFish)}\r\n            {gameFinished ? winOrLose() : \"\" }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Race;","const fishes = [\r\n    {\r\n        key:1,\r\n        name: \"Gold fish\",\r\n        img: \"/img/goldfish.png\",\r\n        counting: 0\r\n    },\r\n    {\r\n        key: 2,\r\n        name: \"Clown fish\",\r\n        img:\"/img/clownfish.png\",\r\n        counting: 0\r\n\r\n    },\r\n    {\r\n        key: 3,\r\n        name: \"Piranha\",\r\n        img:\"/img/piranha.png\",\r\n        counting: 0\r\n\r\n    },\r\n    {\r\n        key: 4,\r\n        name: \"Lion fish\",\r\n        img:\"/img/lionfish.png\",\r\n        counting: 0\r\n\r\n    }\r\n]\r\nexport default fishes;","import React from \"react\";\r\n// import Instructions from \"./Instructions\"\r\n// import MyBets from \"./MyBets\"\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction Header(props) {\r\n    return <div className=\"header\">\r\n            <Link className=\"logo\" to=\"/\" onClick={() => props.setGameState(\"choose\")}>BetCat</Link>\r\n            <Link className=\"header-link\" to=\"/my-bets\"> /MyBets</Link>\r\n            <Link className=\"header-link\" to=\"/instructions\"> <i class=\"far fa-question-circle\"></i></Link>\r\n\r\n        </div>\r\n\r\n        \r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Instructions(props) {\r\n    \r\n    return <div className=\"instruction\">\r\n\r\n        <Link to=\"/\"><i onClick={props.handleClick} className=\"close-button fas fa-times fa-lg\"></i></Link>\r\n        <img className=\"cat-instruction-img\" alt=\"Black cat using a blue sunglass\" src=\"/img/cat3.png\"></img>\r\n\r\n        <div className=\"instructions-text\">\r\n        <h2 className=\"instructions-title\">That's how the game works:</h2>\r\n\r\n        <p><i className=\"fas fa-paw\"></i> You'll beginn with 1000 cat's food; </p>\r\n        <p><i className=\"fas fa-paw\"></i> Click on the fish to choose it and put how much you want to bet;</p>\r\n        <p><i className=\"fas fa-paw\"></i> When one of your fishes wins, the amount you bet on it will be multiplied by 3; </p>\r\n        <p><i className=\"fas fa-paw\"></i> Try to not lose all your food! </p>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Instructions;","import React from \"react\";\r\n\r\nfunction MyBets(props) {\r\n    const rounds=props.bets.map((bet, i) => ({\r\n        fishes:[...bet.fishes],\r\n        roundNumber: i + 1,\r\n        balance: bet.prize - bet.totalBets\r\n    })).reverse()\r\n\r\n    function showFish(fish) {\r\n       \r\n        return <div>\r\n            <h1>{fish.won ? <i class=\"fas fa-crown fa-sm\"></i>: \"\"} {fish.name}</h1>\r\n        </div>\r\n    }\r\n\r\n    function showRound(round) {\r\n        const podium = round.fishes.sort((a, b) => a.velocity - b.velocity)\r\n        let text\r\n\r\n        if(round.balance < 0){\r\n            text = `You lost ${-round.balance} in this round.`\r\n        } else if(round.balance === 0) {\r\n            text = `You didn't lose or win any food in this round.`\r\n        } else {\r\n            text = `You won ${round.balance} in this round.`\r\n        }\r\n\r\n        return <div>\r\n            <h2>Round {round.roundNumber} </h2>\r\n            {podium.map(showFish)}\r\n            <p>{text} </p>\r\n        </div>\r\n    }\r\n\r\n\r\n    return <div className=\"my-bets\">\r\n\r\n        <h1> My Bets </h1>\r\n\r\n        {rounds.map(showRound)}\r\n\r\n    </div>\r\n}\r\n\r\nexport default MyBets;","import React, { useEffect, useState } from \"react\";\r\nimport Fish from \"./Fish\";\r\nimport Food from \"./Food\"\r\nimport Race from \"./Race\"\r\nimport fishes from \"../fishes\";\r\nimport Header from \"./Header\"\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    useHistory\r\n} from \"react-router-dom\";\r\nimport Instructions from \"./Instructions\"\r\nimport MyBets from \"./MyBets\"\r\nimport Cookies from 'js-cookie';\r\n\r\nfunction App() {\r\n\r\n    const totalFoodCookie = Cookies.get(\"totalFood\")\r\n    const betsCookie = Cookies.get(\"bets\")\r\n\r\n    const [totalFood, setTotalFood] = useState(totalFoodCookie ? JSON.parse(totalFoodCookie) : 1000);\r\n    const [gameState, setGameState] = useState(\"choose\");\r\n    const [savedFishes, setSavedFishes] = useState(fishes.map(fish => ({ ...fish })));\r\n    const [bets, setBets] = useState(betsCookie ? JSON.parse(betsCookie) : [])\r\n\r\n    function handleAdd(amount) {\r\n        if (totalFood > 0) {\r\n            setTotalFood(totalFood - amount)\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    function handleSub(amount) {\r\n        setTotalFood(totalFood + amount)\r\n    }\r\n\r\n    function newFish(fish) {\r\n        return <Fish\r\n            key={fish.key}\r\n            name={fish.name}\r\n            img={fish.img}\r\n            fish={fish}\r\n            onAdd={handleAdd}\r\n            onSub={handleSub}\r\n        />\r\n    }\r\n\r\n    function handleRace() {\r\n        setGameState(\"race\")\r\n    }\r\n\r\n    function handleRestart() {\r\n        const restartWindow = window.confirm(\"Are you sure?\")\r\n\r\n        if (restartWindow) {\r\n            Cookies.remove(\"totalFood\")\r\n            Cookies.remove(\"bets\")\r\n            window.location.reload()\r\n        }\r\n    }\r\n\r\n    function handleRaceEnd(prize, totalBets) {\r\n        const newTotal = prize + totalFood\r\n\r\n        Cookies.set(\"totalFood\", newTotal)\r\n\r\n        bets.push({\r\n            prize: prize,\r\n            totalBets: totalBets,\r\n            fishes: savedFishes\r\n        })\r\n\r\n        Cookies.set(\"bets\", JSON.stringify(bets))\r\n\r\n        setBets(bets)\r\n        setSavedFishes(fishes.map(fish => ({ ...fish })))\r\n        setTotalFood(newTotal)\r\n    }\r\n\r\n    function closeWindow() {\r\n        setGameState(\"choose\")\r\n    }\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (!totalFoodCookie) {\r\n            Cookies.set(\"totalFood\", 1000)\r\n            history.push(\"instructions\")\r\n        }\r\n    })\r\n\r\n\r\n    function home() {\r\n        \r\n        if (gameState === \"choose\") {\r\n            return <div className=\"app\">\r\n                <div className=\"app-text\">\r\n                    <h2>Click on the fish to choose it and put how much you want to bet on!</h2>\r\n                </div>\r\n                <Food foodAmount={totalFood} />\r\n                <div className=\"fish-map\">\r\n                    {savedFishes.map(newFish)}\r\n                </div>\r\n\r\n\r\n                <button className=\"play\" onClick={handleRace}>Let's play! </button>\r\n                <button className=\"play restart\" onClick={handleRestart}>Restart</button>\r\n            </div>\r\n        } else if (gameState === \"race\") {\r\n        return (<Race\r\n                fishes={savedFishes}\r\n                setGameState={setGameState}\r\n                onRaceEnd={handleRaceEnd} />)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Header setGameState={setGameState} />\r\n            <Switch>\r\n                <Route path=\"/instructions\">\r\n                    <Instructions />\r\n                </Route>\r\n                <Route path=\"/my-bets\">\r\n                    <MyBets bets={bets} />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    {home()}\r\n\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App\";\nimport {HashRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(<Router><App /></Router>, document.getElementById(\"root\"));\n"],"sourceRoot":""}